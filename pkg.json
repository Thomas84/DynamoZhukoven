{"license":"","file_hash":null,"name":"Zhukoven.com","version":"2019.5.7","description":"A set of 70+ useful nodes for Dynamo 1.3.3+ & Revit 2017+ that will help you boost your productivity: get element rotation, visualize instance orientation, bounding boxes, insert and reload Revit links, correctly count railing balusters and railing profile, get railing host, path, handrails and  top rail, create Navisworks search set, export Revit view as Navisworks cache, Import system & adaptive facade panels in legend or drafting view, get central model file path, document date and username, scope box location, split multiline text, get wall sweep profile, activate family symbol, get tag host, active workset, point cloud origin, allow disallow wall join, open ifc, open document, close document, batch update families, coordinates, move base point, move survey point, change view phase, create room at phase, unplace room, area reinforcement, rebar set, rebar presentation mode, current os user info, stairs landings, stairs runs, vector parallel to view, revision cloud by point, steel connections, shared parameters guids types and units, create 3D view, view filter visibility, mirrored instance, split list by string, get rebar shape, create workset, viewports and views on sheets. Please note: although these nodes were tested live in the real project environment, there may be different results depending on your project. Make sure to save your file(s) before running anyone's nodes. And if you've found any issues in my package, please contact me @ https://zhukoven.com","group":"Zhukoven.com","keywords":["elements","families","document","ifc","navisworks","pointcloud","railings","rebar","views","worksets"],"dependencies":[],"contents":"3DSectionBox.Points - Extract section boxes from desired 3D views, and convert them into Dynamo Min & Max points. Use these points with \"BoundingBox.ByCorners\" OOTB node to get the bounding box element., ActiveView.SetPhase - Input phase that you would like to set to the active view., AllElementsOfCategoryAtLevel - Select all elements of the specified category at the specified level., AreaReinforcement.GetRebarSets - This node extracts all the rebar sets from the input Structural Area Reinforcement element. The output elements are shown as \"RebarInSystem\"., BoundingBox.CenterPoint - Input Bounding Box element to get its center point. This node is little and lightweight, as it doesn't convert bounding box to geometry to get its centroid point., BoundingBox.Dimensions - Input Bounding Box element to get its dimensions (Width, Length, Height). Setting Boolean switch to True rounds output values., BoundingBox.ToSectionBox - Convert Dynamo BoundingBox to Revit Section Box, and apply it to the desired 3D view., ContinuousRail.GetHost - Get host railing element for the input continuous rail., Coordinates.MoveBasePoint - Shift base point elevation (Z) by the given value. Input boolean switch (True) to move up, or (False) to move down. , Coordinates.MoveSurveyPoint - Shift survey point elevation (Z) by the given value. Input boolean switch (True) to move up, or (False) to move down. , Document.ActiveWorkset - Get active workset name from the current document., Document.CentralModelPath - Extracts file path of the central model. Works from within both Central and Local workshared models. Returns null if worksharing is disabled in current Document., Document.Close - Close current Revit document. Use boolean switch (true / false) to save / discard any changes., Document.DateInfo - Input file path to get its created and last saved dates. This node uses built-in python functions, so that all the file extensions are supported (Revit documents, images, text files, etc.). If you input current unsaved Revit document (detached central model, for instance), the node will return null values., Document.GetWarnings - NOTE: Works only with Revit 2018 and above!\r\nGet all warnings from the current document., Document.Open - Open document from the input File Path, Document.Username - Extracts username from the current Revit application instance. , Element.CopyID - This node copies element's ID to clipboard., Element.FlipWorkplane - Flip workplane for single or multiple elements. Input element(s) and boolean (true / false)., Element.GetRotation - This node calculates rotation angle between selected element's vector and Y axis. Vector Z is used as rotation axis. Use resulting degree as an input to the FamilyInstance.SetRotation node., FacadePanel.ImportInLegend - Use this node to annotate facade panels in Legends or Drafring views. Select your system panel (or an adaptive component), then choose the destination view and its plane. The node will import selected panel into the view, allowing you to place dimensions and annotate each component. You may use the View.Plane node from the Clockwork package to get the view's plane as an input. Use the output point as location point to place annotation text., Families.BatchUpdate - Input directory path to upgrade all the *.rfa families inside this folder to your currently opened Revit version. Don't forget to backup these families before using the node., FamilyInstance.ByPointEachRun - Place family instance by point each time you hit the 'Run' button without deleting previously placed ones. Don't use this node in 'Auto' mode!, FamilyInstance.IsMirrored - Check if the input families are mirrored in the model. Output type is boolean (true/false). Switch Lasing to Longest if you input a list of family instances., FamilyInstance.VisualizeOrientation - This little node shows selected elements' orientation with Dynamo lines. The line starts from element location point, and indicates its facing orientation. Resulting lines could then be used to place elements or set rotation angles.\r\n*NOTE* This node may not work with some system families., FamilyType.Activate - This node eliminates the error \"The symbol is not active\" when placing family instances. , Insert.LinkRevit - Link Revit model into your current document, List.ContainsItems - Checks if each item of a given list matches at least one item of another list, List.ContainsNull - Check if the input list contains null items, List.MultiplyByAnotherList - Multiplies each item of a given list by unique number given in another list. Works for equal lists, List.SplitByString - This node will split the input list of strings into the separate lists. Does not work with numbers and with empty separators (for example, \"\")., Math.AddEachPreviousItemInList - This node adds each previous item in the input list. For example: input list of these values: [4, 2, 1, 3] will result in their sums: [4, 6, 7, 10], Math.MultiplyAllValuesInList - This node simply multiplies all values in the given list., MultilineText.FromList - Convert the input list to multiline string., MultilineText.Strings - Extract each line from multiline text parameter as a list of strings., Navisworks.CreateSearchSet - Based on original code by Luke Johnson, this node gives the freedom in Navisworks XML file creation. You're able to specify the Navisworks Search Set name & group, and choose which Navisworks parameter you're going to use. Don't use this node in Auto mode. Be careful to backup your XML files before each run, if you're not going to overwrite them., Navisworks.ExportCache - ***NOTE*** This node needs Navisworks Exporters for Revit addin to export cache files!\r\nUse this node to export Navisworks cache from the current Revit document. You may choose one or multiple 3D-views to export, but be sure to provide their names as strings. Use the \"ExportLinks\" boolean switch to export Revit linked files. Toggle Reset if Dynamo refuses to export cache., OpenIFC - Opens an IFC document from disk using default options, and converts it to Revit document., OS.CurrentUserInfo - Get current user logged in info: username, appdata path and desktop path. Desktop path works also for the Microsoft Windows roaming profiles and localized OS versions., PointCloud.Origin - Input point cloud (.rcp) to get its origin point., Points.SortClockwise - This nodes attempts to re-arrange the list of points in a Clockwise order. Input boolean False if you wish to sort Counterclockwise, Railing.CalculateBalusterProfile - *NOTE* Processes only one railing instance at a time. Don't feed it with multiple elements!\r\nThis node calculates baluster widths., Railing.CountBalusters - *NOTE* Processes only one railing instance at a time. Don't feed it with multiple elements!\r\nBased on the \"Railing.BalusterCount\" node from the Rhythm package, this custom node removes false positives that resulted in incorrect number of balusters., Railing.GetHost - Get host element for selected railing, Railing.GetPath - Extract railing path as Dynamo curves from the input railing element. Only single railing element allowed., Railing.GetTopRail - Extract top rail from the input railing element. Only single railing element allowed., Railing.TypeInfo - Input railing instance element to get its type info: railing type, primary handrail type, secondary handrail type, top rail type., Rebar.GetRebarShape - Input rebar elements, including RebarInSystem, to get the underlying rebar shapes., RebarSet.Info - Input rebar set to get information about nested rebars: quantity, total length., RebarSet.PresentationMode - Choose one the presentation modes for the input rebar set(s): Show All Rebars (default), Show First and Last Rebar, Show Middle Rebar. These presentation modes are view-specific, so be sure to input the desired view(s)., RebarSet.ResetPresentationMode - Reset rebar presentation mode to default (Show All Rebars) in view., RebarShape.GetByName - Select rebar shape element by its name (String)., RebarShape.GetCurves - Generate curves for the rebar shape, as used in the shape browser., RevisionCloud.ByPoint - Place revision cloud by specified point., RevitLinks.Reload - Reloads all linked Revit files loaded into the current document. Do NOT use this node in Automatic mode!, Room.ByPhaseLevelActiveView - Place room elements at the desired phase in the active view. Note that the phase of the active view would be changed to be aligned with the phase that you choose in Dynamo., Room.ByPhaseLevelView - Place room elements at the desired phase in the selected view. Note that the phase of the selected view would be changed to be aligned with the phase that you choose in Dynamo., Room.CreateUnplacedAtPhase - This node creates unplaces room at the desired phase, using number (str.) and name (str.) provided., Room.Unplace - Input room(s) that you wish to unplace (remove from the model views). These rooms would be stored in the project, and could be placed again in another location. , ScopeBox.CenterPoint - This node takes Scope Box element and extracts its center point as location., SharedParameters.GUID - Get unique GUIDs of the shared parameters loaded in the Revit project., SharedParameters.Info - Get the following information about shared parameters loaded in the Revit project: parameter group, parameter type, unit type., Sheet.Viewports - Query viewports from the input sheet(s)., Stairs.GetLandings - This node returns all the stairs landing components in the stairs., Stairs.GetStairsRuns - This node returns all the stairs run components in the stairs., Stairs.Info - This node returns some basic data from the input stair element(s): risers' and treads' height and number, stories, level, etc. , SteelConnection.IsCustom - Input structural steel connection to check if it is custom or not (boolean output), String.AddPrefixSuffix - Add prefix and suffix to the input string., Tag.GetHost - Input tags to get their host elements., Topography.PolySurface - Convert topography element to polysurface, UI.SelectionBox - Activate Revit 3D selection box by selected elements., Vector.IsParallelToView - This node checks if a given vector is parallel to a given view., View.SetFilterVisibility - This node sets view filter visibility (graphics overrides) for the chosen view(s) and filter(s). Input view(s), ParameterFilterElement and boolean switch, which toggles filter visibility. , View.SetPhase - Input phase that you would like to set to the desired view., View3D.CreateIsometric - This node creates new 3D view inside the Revit project., Viewport.Sheet - Query the sheet that owns the input viewport., Viewport.View - Query the view associated with the input viewport., Walls.AllowJoinAtEnd - Allows the wall's end to join to other walls. If that end is near other walls it will become joined as a result., Walls.DisallowJoinAtEnd - Sets the wall's end not to join to other walls., Walls.IsWallJoinAllowed - Identifies if the indicated end of the wall allows joins or not., WallSweep.GetMaterial - This node takes wall sweep elements and extracts their materials. It works both with standard sweeps, and wall assemblies. , WallSweep.GetProfile - This node takes wall sweep elements and extracts their profiles. It works both with standard sweeps, and wall assemblies. , Workset.Create - Create new worksets with the input names (strings) in the current document., Workset.Id - Get Ids from the input workset elements.","engine_version":"1.3.4.6666","engine":"dynamo","engine_metadata":"","site_url":"https://zhukoven.com","repository_url":"","contains_binaries":false,"node_libraries":[]}